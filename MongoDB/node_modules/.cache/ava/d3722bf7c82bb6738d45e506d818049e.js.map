{"version":3,"sources":["shop-services.js"],"names":["t","createChocolate","name","price","creation","app","post","send","res","get","is","status","true","isArray","body","length","fetchRes","_id","chocolateFetched","deepEqual","createdChocolate","deleteChocolate","delete","fetch","newTheater","totalSales","movies","theatersList","age","fetchTheater","deleteTheater","newTitans","attendees","createMovie","createTheater","addMovie","movieId"],"mappings":"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","file":"shop-services.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../app'\n\ntest('See list of shop items', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const creation = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const res = await request(app).get('/shop')\n\n    t.is(res.status, 200)\n    t.true(Array.isArray(res.body),'Body is array')\n    t.true(res.body.length > 0)\n})\n\n\ntest('Create new Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const res = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    t.is(res.status, 200)\n    t.is(res.body.name, createChocolate.name)\n    t.is(res.body.price, createChocolate.price)\n})\n\ntest('Fetch a shop Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const res = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const fetchRes = await request(app).get(\n        `/item/${res.body._id}`\n        )\n\n    const chocolateFetched = fetchRes.body\n\n    t.is(fetchRes.status, 200)\n    t.deepEqual(res.body,chocolateFetched)\n})\n\ntest('Delete an Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const createdChocolate = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const deleteChocolate = await request(app)\n    .delete(`/item/${createdChocolate.body._id}`)\n\n    t.is(deleteChocolate.status, 200)\n\n    const fetch = await request(app).get(`/item/${createdChocolate.body._id}/json`)\n\n    t.is(fetch.status, 404);\n\n})\n\n//Theater Services\ntest('See list of theaters', async t =>{\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const theatersList = await request(app).get('/theaters')\n\n    t.is(theatersList.status, 200)\n    t.true(Array.isArray(theatersList.body))\n    t.true(theatersList.body.length > 0)\n})\n\ntest('Create a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    t.is(creation.status, 200)\n    t.is(newTheater.name, creation.body.name)\n    t.is(newTheater.age, creation.body.age)\n    t.deepEqual(newTheater.movies, creation.body.movies)\n})\n\ntest('Fetch a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const fetchTheater = await request(app)\n    .get(`/theater/${creation.body._id}`)\n\n\n    t.is(fetchTheater.status, 200)\n    t.deepEqual(creation.body, fetchTheater.body)\n})\n\ntest('Delete a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const deleteTheater = await request(app)\n    .delete(`/theater/${creation.body._id}`)\n\n    const fetchTheater = await request(app)\n    .get(`/theater/${creation.body._id}/json`)\n    \n    t.is(deleteTheater.status, 200)\n    t.is(fetchTheater.status, 404)\n\n})\n\ntest('Add a movie to a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n    \n    const newTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createMovie = await request(app)\n    .post('/movie')\n    .send(newTitans)\n\n    const createTheater = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const addMovie = await request(app)\n    .post(`/theater/${createTheater.body._id}/add-movie`)\n    .send({movieId : createMovie.body._id})\n    \n    t.is(addMovie.status, 200)\n\n})\n\n\n"]}
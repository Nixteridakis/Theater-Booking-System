{"version":3,"sources":["person-services.js"],"names":["t","newPerson","name","age","shopped","creation","app","post","send","people","get","is","status","true","isArray","body","length","deepEqual","fetchPerson","_id","deletePerson","delete","newItem","price","createPerson","createItem","addItem","itemId"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAIA;;AAEA,mBAAK,qBAAL,EAA4B,MAAMA,CAAN,IAAU;AAAA;AAAA;;AAClC,UAAMC,YAAY;AACdC,cAAK,MADS;AAEdC,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAMC,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjBP,SAFiB,CAAvB;;AAIA,UAAMQ,SAAS,MAAM,yBAAQH,aAAR,EAAaI,GAAb,CAAiB,SAAjB,CAArB;;AAEAV,MAAEW,EAAF,CAAKF,OAAOG,MAAZ,EAAoB,GAApB;AACAZ,MAAEa,IAAF,uBAAO,+CAAMC,OAAN,YAAc,qDAAOC,IAArB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAf,MAAEa,IAAF,yBAAO,8EAAOE,IAAP,6BAAYC,MAAZ,wBAAqB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAhBD;;AAkBA,mBAAK,iBAAL,EAAwB,MAAMhB,CAAN,IAAW;AAC/B,UAAMC,YAAY;AACdC,cAAK,MADS;AAEdC,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAMC,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjBP,SAFiB,CAAvB;;AAIAD,MAAEW,EAAF,CAAKN,SAASO,MAAd,EAAsB,GAAtB;AACAZ,MAAEW,EAAF,CAAKV,UAAUC,IAAf,EAAqBG,SAASU,IAAT,CAAcb,IAAnC;AACAF,MAAEW,EAAF,CAAKV,UAAUE,GAAf,EAAoBE,SAASU,IAAT,CAAcZ,GAAlC;AACAH,MAAEiB,SAAF,CAAYhB,UAAUG,OAAtB,EAA+BC,SAASU,IAAT,CAAcX,OAA7C;AACH,CAfD;;AAiBA,mBAAK,gBAAL,EAAuB,MAAMJ,CAAN,IAAW;AAC9B,UAAMC,YAAY;AACdC,cAAK,MADS;AAEdC,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAMC,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjBP,SAFiB,CAAvB;;AAIA,UAAMiB,cAAc,MAAM,yBAAQZ,aAAR,EACzBI,GADyB,CACpB,WAAUL,SAASU,IAAT,CAAcI,GAAI,EADR,CAA1B;;AAGAnB,MAAEW,EAAF,CAAKO,YAAYN,MAAjB,EAAyB,GAAzB;AACAZ,MAAEiB,SAAF,CAAYZ,SAASU,IAArB,EAA2BG,YAAYH,IAAvC;AACH,CAhBD;;AAkBA,mBAAK,iBAAL,EAAwB,MAAMf,CAAN,IAAW;AAC/B,UAAMC,YAAY;AACdC,cAAK,MADS;AAEdC,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAMC,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjBP,SAFiB,CAAvB;;AAIA,UAAMmB,eAAe,MAAM,yBAAQd,aAAR,EAAae,MAAb,CAAqB,WAAUhB,SAASU,IAAT,CAAcI,GAAI,EAAjD,CAA3B;;AAEAnB,MAAEW,EAAF,CAAKS,aAAaR,MAAlB,EAA0B,GAA1B;;AAEA,UAAMM,cAAc,MAAM,yBAAQZ,aAAR,EAAaI,GAAb,CAAkB,WAAUL,SAASU,IAAT,CAAcI,GAAI,OAA9C,CAA1B;;AAEAnB,MAAEW,EAAF,CAAKO,YAAYN,MAAjB,EAAyB,GAAzB;AACH,CAlBD;;AAoBA,mBAAK,wBAAL,EAA+B,MAAMZ,CAAN,IAAW;AACtC,UAAMC,YAAY;AACdC,cAAK,QADS;AAEdC,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAMkB,UAAU;AACZpB,cAAM,WADM;AAEZqB,eAAO;AAFK,KAAhB;;AAKA,UAAMC,eAAe,MAAM,yBAAQlB,aAAR,EAC1BC,IAD0B,CACrB,SADqB,EAE1BC,IAF0B,CAErBP,SAFqB,CAA3B;;AAIA,UAAMwB,aAAa,MAAM,yBAAQnB,aAAR,EACxBC,IADwB,CACnB,OADmB,EAExBC,IAFwB,CAEnBc,OAFmB,CAAzB;;AAIA,UAAMI,UAAU,MAAM,yBAAQpB,aAAR,EACrBC,IADqB,CACf,WAAUiB,aAAaT,IAAb,CAAkBI,GAAI,WADjB,EAErBX,IAFqB,CAEhB,EAACmB,QAASF,WAAWV,IAAX,CAAgBI,GAA1B,EAFgB,CAAtB;;AAIAnB,MAAEW,EAAF,CAAKe,QAAQd,MAAb,EAAqB,GAArB;AACAZ,MAAEW,EAAF,CAAKe,QAAQX,IAAR,CAAaX,OAAb,CAAqB,CAArB,EAAwBe,GAA7B,EAAkCM,WAAWV,IAAX,CAAgBI,GAAlD;AACAnB,MAAEiB,SAAF,CAAYS,QAAQX,IAAR,CAAaX,OAAb,CAAqB,CAArB,CAAZ,EAAqCqB,WAAWV,IAAhD;AAEH,CA5BD","file":"person-services.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../app'\n\n\n\n//PERSON SERVICES\n\ntest('See list of persons', async t =>{\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const people = await request(app).get('/people')\n\n    t.is(people.status, 200)\n    t.true(Array.isArray(people.body))\n    t.true(people.body.length > 0)\n})\n\ntest('Create a person', async t => {\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    t.is(creation.status, 200)\n    t.is(newPerson.name, creation.body.name)\n    t.is(newPerson.age, creation.body.age)\n    t.deepEqual(newPerson.shopped, creation.body.shopped)\n})\n\ntest('Fetch a person', async t => {\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const fetchPerson = await request(app)\n    .get(`/person/${creation.body._id}`)\n\n    t.is(fetchPerson.status, 200)\n    t.deepEqual(creation.body, fetchPerson.body)\n})\n\ntest('Delete a person', async t => {\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const deletePerson = await request(app).delete(`/person/${creation.body._id}`)\n\n    t.is(deletePerson.status, 200)\n\n    const fetchPerson = await request(app).get(`/person/${creation.body._id}/json`)\n\n    t.is(fetchPerson.status, 404)\n})\n\ntest('Add item to the person', async t => {\n    const newPerson = {\n        name:'Kostas', \n        age:33, \n        shopped:[]\n    }\n\n    const newItem = {\n        name: 'Chocolate',\n        price: 3\n    }\n\n    const createPerson = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const createItem = await request(app)\n    .post('/item')\n    .send(newItem)\n\n    const addItem = await request(app)\n    .post(`/person/${createPerson.body._id}/add-item`)\n    .send({itemId : createItem.body._id})\n\n    t.is(addItem.status, 200 )\n    t.is(addItem.body.shopped[0]._id, createItem.body._id)\n    t.deepEqual(addItem.body.shopped[0], createItem.body)\n\n})\n"]}
{"version":3,"sources":["shop.js"],"names":["t","createChocolate","name","price","creation","app","post","send","res","get","is","status","true","isArray","body","length","fetchRes","_id","chocolateFetched","deepEqual"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,wBAAL,EAA+B,MAAMA,CAAN,IAAU;AAAA;AAAA;;AACrC,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMC,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,OADiB,EAEtBC,IAFsB,CAEjBN,eAFiB,CAAvB;;AAIA,UAAMO,MAAM,MAAM,yBAAQH,aAAR,EAAaI,GAAb,CAAiB,OAAjB,CAAlB;;AAEAT,MAAEU,EAAF,CAAKF,IAAIG,MAAT,EAAiB,GAAjB;AACAX,MAAEY,IAAF,uBAAO,+CAAMC,OAAN,YAAc,kDAAIC,IAAlB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA+B,eAA/B;AACAd,MAAEY,IAAF,yBAAO,2EAAIE,IAAJ,6BAASC,MAAT,wBAAkB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAZD;;AAeA,mBAAK,iBAAL,EAAwB,MAAMf,CAAN,IAAU;AAC9B,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMK,MAAM,MAAM,yBAAQH,aAAR,EACjBC,IADiB,CACZ,OADY,EAEjBC,IAFiB,CAEZN,eAFY,CAAlB;;AAIAD,MAAEU,EAAF,CAAKF,IAAIG,MAAT,EAAiB,GAAjB;AACAX,MAAEU,EAAF,CAAKF,IAAIM,IAAJ,CAASZ,IAAd,EAAoBD,gBAAgBC,IAApC;AACAF,MAAEU,EAAF,CAAKF,IAAIM,IAAJ,CAASX,KAAd,EAAqBF,gBAAgBE,KAArC;AACH,CAVD;;AAYA,mBAAK,mBAAL,EAA0B,MAAMH,CAAN,IAAU;AAChC,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMK,MAAM,MAAM,yBAAQH,aAAR,EACjBC,IADiB,CACZ,OADY,EAEjBC,IAFiB,CAEZN,eAFY,CAAlB;;AAIA,UAAMe,WAAW,MAAM,yBAAQX,aAAR,EAAaI,GAAb,CAClB,SAAQD,IAAIM,IAAJ,CAASG,GAAI,EADH,CAAvB;;AAIA,UAAMC,mBAAmBF,SAASF,IAAlC;;AAEAd,MAAEU,EAAF,CAAKM,SAASL,MAAd,EAAsB,GAAtB;AACAX,MAAEmB,SAAF,CAAYX,GAAZ,EAAgBU,gBAAhB;AACH,CAfD","file":"shop.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../app'\n\ntest('See list of shop items', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const creation = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const res = await request(app).get('/shop')\n\n    t.is(res.status, 200)\n    t.true(Array.isArray(res.body),'Body is array')\n    t.true(res.body.length > 0)\n})\n\n\ntest('Create new Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const res = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    t.is(res.status, 200)\n    t.is(res.body.name, createChocolate.name)\n    t.is(res.body.price, createChocolate.price)\n})\n\ntest('Fetch a shop Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const res = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const fetchRes = await request(app).get(\n        `/item/${res.body._id}`\n        )\n\n    const chocolateFetched = fetchRes.body\n\n    t.is(fetchRes.status, 200)\n    t.deepEqual(res,chocolateFetched)\n})"]}
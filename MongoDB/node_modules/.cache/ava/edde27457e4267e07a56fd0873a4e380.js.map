{"version":3,"sources":["shop-services.js"],"names":["t","createChocolate","name","price","creation","app","post","send","res","get","is","status","true","isArray","body","length","fetchRes","_id","chocolateFetched","deepEqual","createdChocolate","deleteChocolate","delete","fetch","createMovie","attendees","list","movieTitans","createTitans","fetchTitans","deleteTitans","personJohn","age","shopped","createJohn","addPerson","personId","newPerson","people","fetchPerson","deletePerson","newItem","createPerson","createItem","addItem","itemId","newTheater","totalSales","movies","theatersList","fetchTheater","deleteTheater","newTitans","createTheater","addMovie"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,wBAAL,EAA+B,MAAMA,CAAN,IAAU;AAAA;AAAA;;AACrC,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMC,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,OADiB,EAEtBC,IAFsB,CAEjBN,eAFiB,CAAvB;;AAIA,UAAMO,MAAM,MAAM,yBAAQH,aAAR,EAAaI,GAAb,CAAiB,OAAjB,CAAlB;;AAEAT,MAAEU,EAAF,CAAKF,IAAIG,MAAT,EAAiB,GAAjB;AACAX,MAAEY,IAAF,uBAAO,+CAAMC,OAAN,YAAc,kDAAIC,IAAlB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA+B,eAA/B;AACAd,MAAEY,IAAF,yBAAO,2EAAIE,IAAJ,6BAASC,MAAT,wBAAkB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAZD;;AAeA,mBAAK,iBAAL,EAAwB,MAAMf,CAAN,IAAU;AAC9B,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMK,MAAM,MAAM,yBAAQH,aAAR,EACjBC,IADiB,CACZ,OADY,EAEjBC,IAFiB,CAEZN,eAFY,CAAlB;;AAIAD,MAAEU,EAAF,CAAKF,IAAIG,MAAT,EAAiB,GAAjB;AACAX,MAAEU,EAAF,CAAKF,IAAIM,IAAJ,CAASZ,IAAd,EAAoBD,gBAAgBC,IAApC;AACAF,MAAEU,EAAF,CAAKF,IAAIM,IAAJ,CAASX,KAAd,EAAqBF,gBAAgBE,KAArC;AACH,CAVD;;AAYA,mBAAK,mBAAL,EAA0B,MAAMH,CAAN,IAAU;AAChC,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMK,MAAM,MAAM,yBAAQH,aAAR,EACjBC,IADiB,CACZ,OADY,EAEjBC,IAFiB,CAEZN,eAFY,CAAlB;;AAIA,UAAMe,WAAW,MAAM,yBAAQX,aAAR,EAAaI,GAAb,CAClB,SAAQD,IAAIM,IAAJ,CAASG,GAAI,EADH,CAAvB;;AAIA,UAAMC,mBAAmBF,SAASF,IAAlC;;AAEAd,MAAEU,EAAF,CAAKM,SAASL,MAAd,EAAsB,GAAtB;AACAX,MAAEmB,SAAF,CAAYX,IAAIM,IAAhB,EAAqBI,gBAArB;AACH,CAfD;;AAiBA,mBAAK,gBAAL,EAAuB,MAAMlB,CAAN,IAAU;AAC7B,UAAMC,kBAAkB,EAACC,MAAM,WAAP,EAAoBC,OAAO,CAA3B,EAAxB;;AAEA,UAAMiB,mBAAmB,MAAM,yBAAQf,aAAR,EAC9BC,IAD8B,CACzB,OADyB,EAE9BC,IAF8B,CAEzBN,eAFyB,CAA/B;;AAIA,UAAMoB,kBAAkB,MAAM,yBAAQhB,aAAR,EAC7BiB,MAD6B,CACrB,SAAQF,iBAAiBN,IAAjB,CAAsBG,GAAI,EADb,CAA9B;;AAGAjB,MAAEU,EAAF,CAAKW,gBAAgBV,MAArB,EAA6B,GAA7B;;AAEA,UAAMY,QAAQ,MAAM,yBAAQlB,aAAR,EAAaI,GAAb,CAAkB,SAAQW,iBAAiBN,IAAjB,CAAsBG,GAAI,OAApD,CAApB;;AAEAjB,MAAEU,EAAF,CAAKa,MAAMZ,MAAX,EAAmB,GAAnB;AAEH,CAhBD;;AAmBA;;AAEA,mBAAK,oBAAL,EAA2B,MAAMX,CAAN,IAAU;AAAA;AAAA;;AACjC,UAAMwB,cAAc;AAChBtB,cAAM,QADU;AAEhBC,eAAO,CAFS;AAGhBsB,mBAAW;AAHK,KAApB;;AAMA,UAAMrB,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,QADiB,EAEtBC,IAFsB,CAEjBiB,WAFiB,CAAvB;;AAIA,UAAME,OAAO,MAAM,yBAAQrB,aAAR,EAAaI,GAAb,CAAiB,SAAjB,CAAnB;;AAEAT,MAAEU,EAAF,CAAKgB,KAAKf,MAAV,EAAkB,GAAlB;AACAX,MAAEY,IAAF,yBAAO,gDAAMC,OAAN,aAAc,oDAAKC,IAAnB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAd,MAAEY,IAAF,yBAAO,4EAAKE,IAAL,6BAAUC,MAAV,wBAAmB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAhBD;;AAkBA,mBAAK,aAAL,EAAoB,MAAMf,CAAN,IAAW;AAC3B,UAAM2B,cAAc;AAChBzB,cAAM,QADU;AAEhBC,eAAO,CAFS;AAGhBsB,mBAAW;AAHK,KAApB;;AAMA,UAAMG,eAAe,MAAM,yBAAQvB,aAAR,EAAaC,IAAb,CAAkB,QAAlB,EAA4BC,IAA5B,CAAiCoB,WAAjC,CAA3B;;AAEA3B,MAAEU,EAAF,CAAKkB,aAAajB,MAAlB,EAA0B,GAA1B;AACAX,MAAEU,EAAF,CAAKkB,aAAad,IAAb,CAAkBZ,IAAvB,EAA6ByB,YAAYzB,IAAzC;AACAF,MAAEU,EAAF,CAAKkB,aAAad,IAAb,CAAkBX,KAAvB,EAA8BwB,YAAYxB,KAA1C;AACAH,MAAEmB,SAAF,CAAYS,aAAad,IAAb,CAAkBW,SAA9B,EAAyCE,YAAYF,SAArD;AACH,CAbD;;AAeA,mBAAK,eAAL,EAAsB,MAAMzB,CAAN,IAAW;AAC7B,UAAM2B,cAAc;AAChBzB,cAAM,QADU;AAEhBC,eAAO,CAFS;AAGhBsB,mBAAW;AAHK,KAApB;;AAMA,UAAMG,eAAe,MAAM,yBAAQvB,aAAR,EAAaC,IAAb,CAAkB,QAAlB,EAA4BC,IAA5B,CAAiCoB,WAAjC,CAA3B;AACA,UAAME,cAAc,MAAM,yBAAQxB,aAAR,EAAaI,GAAb,CAAkB,UAASmB,aAAad,IAAb,CAAkBG,GAAI,EAAjD,CAA1B;;AAEAjB,MAAEU,EAAF,CAAKmB,YAAYlB,MAAjB,EAAyB,GAAzB;AACAX,MAAEU,EAAF,CAAKmB,YAAYf,IAAZ,CAAiBZ,IAAtB,EAA4ByB,YAAYzB,IAAxC;AACAF,MAAEU,EAAF,CAAKmB,YAAYf,IAAZ,CAAiBX,KAAtB,EAA6BwB,YAAYxB,KAAzC;AACH,CAbD;;AAeA,mBAAK,gBAAL,EAAuB,MAAMH,CAAN,IAAW;AAC9B,UAAM2B,cAAc;AAChBzB,cAAM,QADU;AAEhBC,eAAO,CAFS;AAGhBsB,mBAAW;AAHK,KAApB;;AAMA,UAAMG,eAAe,MAAM,yBAAQvB,aAAR,EAAaC,IAAb,CAAkB,QAAlB,EAA4BC,IAA5B,CAAiCoB,WAAjC,CAA3B;AACA,UAAMG,eAAe,MAAM,yBAAQzB,aAAR,EAAaiB,MAAb,CAAqB,UAASM,aAAad,IAAb,CAAkBG,GAAI,EAApD,CAA3B;;AAEAjB,MAAEU,EAAF,CAAKoB,aAAanB,MAAlB,EAA0B,GAA1B;;AAEA,UAAMkB,cAAc,MAAM,yBAAQxB,aAAR,EAAaI,GAAb,CAAkB,UAASmB,aAAad,IAAb,CAAkBG,GAAI,OAAjD,CAA1B;;AAEAjB,MAAEU,EAAF,CAAKmB,YAAYlB,MAAjB,EAAyB,GAAzB;AACH,CAfD;;AAiBA,mBAAK,2BAAL,EAAkC,MAAMX,CAAN,IAAW;AACzC,UAAM2B,cAAc;AAChBzB,cAAM,QADU;AAEhBC,eAAO,CAFS;AAGhBsB,mBAAW;AAHK,KAApB;;AAMA,UAAMM,aAAa;AACf7B,cAAM,OADS;AAEf8B,aAAK,EAFU;AAGfC,iBAAU;AAHK,KAAnB;;AAMA,UAAML,eAAe,MAAM,yBAAQvB,aAAR,EAAaC,IAAb,CAAkB,QAAlB,EAA4BC,IAA5B,CAAiCoB,WAAjC,CAA3B;AACA,UAAMO,aAAa,MAAM,yBAAQ7B,aAAR,EAAaC,IAAb,CAAkB,SAAlB,EAA6BC,IAA7B,CAAkCwB,UAAlC,CAAzB;AACA,UAAMI,YAAY,MAAM,yBAAQ9B,aAAR,EAAaC,IAAb,CAAmB,UAASsB,aAAad,IAAb,CAAkBG,GAAI,YAAlD,EAA+DV,IAA/D,CAAoE,EAAC6B,UAAWF,WAAWpB,IAAX,CAAgBG,GAA5B,EAApE,CAAxB;AACAjB,MAAEU,EAAF,CAAKyB,UAAUxB,MAAf,EAAuB,GAAvB;AACAX,MAAEU,EAAF,CAAKyB,UAAUrB,IAAV,CAAeW,SAAf,CAAyB,CAAzB,EAA4BR,GAAjC,EAAsCiB,WAAWpB,IAAX,CAAgBG,GAAtD;AACAjB,MAAEmB,SAAF,CAAYgB,UAAUrB,IAAV,CAAeW,SAAf,CAAyB,CAAzB,CAAZ,EAAyCS,WAAWpB,IAApD;AACH,CAnBD;;AAqBA;;AAEA,mBAAK,qBAAL,EAA4B,MAAMd,CAAN,IAAU;AAAA;AAAA;;AAClC,UAAMqC,YAAY;AACdnC,cAAK,MADS;AAEd8B,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAM7B,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjB8B,SAFiB,CAAvB;;AAIA,UAAMC,SAAS,MAAM,yBAAQjC,aAAR,EAAaI,GAAb,CAAiB,SAAjB,CAArB;;AAEAT,MAAEU,EAAF,CAAK4B,OAAO3B,MAAZ,EAAoB,GAApB;AACAX,MAAEY,IAAF,yBAAO,gDAAMC,OAAN,aAAc,sDAAOC,IAArB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAd,MAAEY,IAAF,yBAAO,8EAAOE,IAAP,6BAAYC,MAAZ,wBAAqB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAhBD;;AAkBA,mBAAK,iBAAL,EAAwB,MAAMf,CAAN,IAAW;AAC/B,UAAMqC,YAAY;AACdnC,cAAK,MADS;AAEd8B,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAM7B,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjB8B,SAFiB,CAAvB;;AAIArC,MAAEU,EAAF,CAAKN,SAASO,MAAd,EAAsB,GAAtB;AACAX,MAAEU,EAAF,CAAK2B,UAAUnC,IAAf,EAAqBE,SAASU,IAAT,CAAcZ,IAAnC;AACAF,MAAEU,EAAF,CAAK2B,UAAUL,GAAf,EAAoB5B,SAASU,IAAT,CAAckB,GAAlC;AACAhC,MAAEmB,SAAF,CAAYkB,UAAUJ,OAAtB,EAA+B7B,SAASU,IAAT,CAAcmB,OAA7C;AACH,CAfD;;AAiBA,mBAAK,gBAAL,EAAuB,MAAMjC,CAAN,IAAW;AAC9B,UAAMqC,YAAY;AACdnC,cAAK,MADS;AAEd8B,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAM7B,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjB8B,SAFiB,CAAvB;;AAIA,UAAME,cAAc,MAAM,yBAAQlC,aAAR,EACzBI,GADyB,CACpB,WAAUL,SAASU,IAAT,CAAcG,GAAI,EADR,CAA1B;;AAGAjB,MAAEU,EAAF,CAAK6B,YAAY5B,MAAjB,EAAyB,GAAzB;AACAX,MAAEmB,SAAF,CAAYf,SAASU,IAArB,EAA2ByB,YAAYzB,IAAvC;AACH,CAhBD;;AAkBA,mBAAK,iBAAL,EAAwB,MAAMd,CAAN,IAAW;AAC/B,UAAMqC,YAAY;AACdnC,cAAK,MADS;AAEd8B,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAM7B,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,SADiB,EAEtBC,IAFsB,CAEjB8B,SAFiB,CAAvB;;AAIA,UAAMG,eAAe,MAAM,yBAAQnC,aAAR,EAAaiB,MAAb,CAAqB,WAAUlB,SAASU,IAAT,CAAcG,GAAI,EAAjD,CAA3B;;AAEAjB,MAAEU,EAAF,CAAK8B,aAAa7B,MAAlB,EAA0B,GAA1B;;AAEA,UAAM4B,cAAc,MAAM,yBAAQlC,aAAR,EAAaI,GAAb,CAAkB,WAAUL,SAASU,IAAT,CAAcG,GAAI,OAA9C,CAA1B;;AAEAjB,MAAEU,EAAF,CAAK6B,YAAY5B,MAAjB,EAAyB,GAAzB;AACH,CAlBD;;AAoBA,mBAAK,wBAAL,EAA+B,MAAMX,CAAN,IAAW;AACtC,UAAMqC,YAAY;AACdnC,cAAK,QADS;AAEd8B,aAAI,EAFU;AAGdC,iBAAQ;AAHM,KAAlB;;AAMA,UAAMQ,UAAU;AACZvC,cAAM,WADM;AAEZC,eAAO;AAFK,KAAhB;;AAKA,UAAMuC,eAAe,MAAM,yBAAQrC,aAAR,EAC1BC,IAD0B,CACrB,SADqB,EAE1BC,IAF0B,CAErB8B,SAFqB,CAA3B;;AAIA,UAAMM,aAAa,MAAM,yBAAQtC,aAAR,EACxBC,IADwB,CACnB,OADmB,EAExBC,IAFwB,CAEnBkC,OAFmB,CAAzB;;AAIA,UAAMG,UAAU,MAAM,yBAAQvC,aAAR,EACrBC,IADqB,CACf,WAAUoC,aAAa5B,IAAb,CAAkBG,GAAI,WADjB,EAErBV,IAFqB,CAEhB,EAACsC,QAASF,WAAW7B,IAAX,CAAgBG,GAA1B,EAFgB,CAAtB;;AAIAjB,MAAEU,EAAF,CAAKkC,QAAQjC,MAAb,EAAqB,GAArB;AACAX,MAAEU,EAAF,CAAKkC,QAAQ9B,IAAR,CAAamB,OAAb,CAAqB,CAArB,EAAwBhB,GAA7B,EAAkC0B,WAAW7B,IAAX,CAAgBG,GAAlD;AACAjB,MAAEmB,SAAF,CAAYyB,QAAQ9B,IAAR,CAAamB,OAAb,CAAqB,CAArB,CAAZ,EAAqCU,WAAW7B,IAAhD;AAEH,CA5BD;;AA+BA;AACA,mBAAK,sBAAL,EAA6B,MAAMd,CAAN,IAAU;AAAA;AAAA;;AACnC,UAAM8C,aAAa;AACf5C,cAAM,KADS;AAEf6C,oBAAY,GAFG;AAGfC,gBAAQ;AAHO,KAAnB;;AAMA,UAAM5C,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,UADiB,EAEtBC,IAFsB,CAEjBuC,UAFiB,CAAvB;;AAIA,UAAMG,eAAe,MAAM,yBAAQ5C,aAAR,EAAaI,GAAb,CAAiB,WAAjB,CAA3B;;AAEAT,MAAEU,EAAF,CAAKuC,aAAatC,MAAlB,EAA0B,GAA1B;AACAX,MAAEY,IAAF,yBAAO,gDAAMC,OAAN,aAAc,4DAAaC,IAA3B,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAd,MAAEY,IAAF,yBAAO,oFAAaE,IAAb,6BAAkBC,MAAlB,wBAA2B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAhBD;;AAkBA,mBAAK,kBAAL,EAAyB,MAAMf,CAAN,IAAW;AAChC,UAAM8C,aAAa;AACf5C,cAAM,KADS;AAEf6C,oBAAY,GAFG;AAGfC,gBAAQ;AAHO,KAAnB;;AAMA,UAAM5C,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,UADiB,EAEtBC,IAFsB,CAEjBuC,UAFiB,CAAvB;;AAIA9C,MAAEU,EAAF,CAAKN,SAASO,MAAd,EAAsB,GAAtB;AACAX,MAAEU,EAAF,CAAKoC,WAAW5C,IAAhB,EAAsBE,SAASU,IAAT,CAAcZ,IAApC;AACAF,MAAEU,EAAF,CAAKoC,WAAWd,GAAhB,EAAqB5B,SAASU,IAAT,CAAckB,GAAnC;AACAhC,MAAEmB,SAAF,CAAY2B,WAAWE,MAAvB,EAA+B5C,SAASU,IAAT,CAAckC,MAA7C;AACH,CAfD;;AAiBA,mBAAK,iBAAL,EAAwB,MAAMhD,CAAN,IAAW;AAC/B,UAAM8C,aAAa;AACf5C,cAAM,KADS;AAEf6C,oBAAY,GAFG;AAGfC,gBAAQ;AAHO,KAAnB;;AAMA,UAAM5C,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,UADiB,EAEtBC,IAFsB,CAEjBuC,UAFiB,CAAvB;;AAIA,UAAMI,eAAe,MAAM,yBAAQ7C,aAAR,EAC1BI,GAD0B,CACrB,YAAWL,SAASU,IAAT,CAAcG,GAAI,EADR,CAA3B;;AAIAjB,MAAEU,EAAF,CAAKwC,aAAavC,MAAlB,EAA0B,GAA1B;AACAX,MAAEmB,SAAF,CAAYf,SAASU,IAArB,EAA2BoC,aAAapC,IAAxC;AACH,CAjBD;;AAmBA,mBAAK,kBAAL,EAAyB,MAAMd,CAAN,IAAW;AAChC,UAAM8C,aAAa;AACf5C,cAAM,KADS;AAEf6C,oBAAY,GAFG;AAGfC,gBAAQ;AAHO,KAAnB;;AAMA,UAAM5C,WAAW,MAAM,yBAAQC,aAAR,EACtBC,IADsB,CACjB,UADiB,EAEtBC,IAFsB,CAEjBuC,UAFiB,CAAvB;;AAIA,UAAMK,gBAAgB,MAAM,yBAAQ9C,aAAR,EAC3BiB,MAD2B,CACnB,YAAWlB,SAASU,IAAT,CAAcG,GAAI,EADV,CAA5B;;AAGA,UAAMiC,eAAe,MAAM,yBAAQ7C,aAAR,EAC1BI,GAD0B,CACrB,YAAWL,SAASU,IAAT,CAAcG,GAAI,OADR,CAA3B;;AAGAjB,MAAEU,EAAF,CAAKyC,cAAcxC,MAAnB,EAA2B,GAA3B;AACAX,MAAEU,EAAF,CAAKwC,aAAavC,MAAlB,EAA0B,GAA1B;AAEH,CApBD;;AAsBA,mBAAK,0BAAL,EAAiC,MAAMX,CAAN,IAAW;AACxC,UAAM8C,aAAa;AACf5C,cAAM,KADS;AAEf6C,oBAAY,GAFG;AAGfC,gBAAQ;AAHO,KAAnB;;AAMA,UAAMI,YAAY;AACdlD,cAAM,QADQ;AAEdC,eAAO,CAFO;AAGdsB,mBAAW;AAHG,KAAlB;;AAMA,UAAMD,cAAc,MAAM,yBAAQnB,aAAR,EACzBC,IADyB,CACpB,QADoB,EAEzBC,IAFyB,CAEpB6C,SAFoB,CAA1B;;AAIA,UAAMC,gBAAgB,MAAM,yBAAQhD,aAAR,EAC3BC,IAD2B,CACtB,UADsB,EAE3BC,IAF2B,CAEtBuC,UAFsB,CAA5B;;AAIA,UAAMQ,WAAW,MAAM,yBAAQjD,aAAR,EACtBC,IADsB,CAChB,YAAW+C,cAAcvC,IAAd,CAAmBG,GAAI,YADlB,CAAvB;;AAGAjB,MAAEU,EAAF,CAAK4C,SAAS3C,MAAd,EAAsB,GAAtB;AAEH,CA1BD","file":"shop-services.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../app'\n\ntest('See list of shop items', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const creation = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const res = await request(app).get('/shop')\n\n    t.is(res.status, 200)\n    t.true(Array.isArray(res.body),'Body is array')\n    t.true(res.body.length > 0)\n})\n\n\ntest('Create new Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const res = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    t.is(res.status, 200)\n    t.is(res.body.name, createChocolate.name)\n    t.is(res.body.price, createChocolate.price)\n})\n\ntest('Fetch a shop Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const res = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const fetchRes = await request(app).get(\n        `/item/${res.body._id}`\n        )\n\n    const chocolateFetched = fetchRes.body\n\n    t.is(fetchRes.status, 200)\n    t.deepEqual(res.body,chocolateFetched)\n})\n\ntest('Delete an Item', async t =>{\n    const createChocolate = {name: 'Chocolate', price: 8}\n\n    const createdChocolate = await request(app)\n    .post('/item')\n    .send(createChocolate)\n\n    const deleteChocolate = await request(app)\n    .delete(`/item/${createdChocolate.body._id}`)\n\n    t.is(deleteChocolate.status, 200)\n\n    const fetch = await request(app).get(`/item/${createdChocolate.body._id}/json`)\n\n    t.is(fetch.status, 404);\n\n})\n\n\n//MOVIE SERVICES\n\ntest('See list of movies', async t =>{\n    const createMovie = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const creation = await request(app)\n    .post('/movie')\n    .send(createMovie)\n\n    const list = await request(app).get('/movies')\n\n    t.is(list.status, 200)\n    t.true(Array.isArray(list.body))\n    t.true(list.body.length > 0)\n})\n\ntest('Add a movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n\n    t.is(createTitans.status, 200)\n    t.is(createTitans.body.name, movieTitans.name)    \n    t.is(createTitans.body.price, movieTitans.price)\n    t.deepEqual(createTitans.body.attendees, movieTitans.attendees)    \n})\n\ntest('Fetch a movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n    const fetchTitans = await request(app).get(`/movie/${createTitans.body._id}`)\n\n    t.is(fetchTitans.status, 200)\n    t.is(fetchTitans.body.name, movieTitans.name)\n    t.is(fetchTitans.body.price, movieTitans.price)\n})\n\ntest('Delete a movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n    const deleteTitans = await request(app).delete(`/movie/${createTitans.body._id}`)\n\n    t.is(deleteTitans.status, 200)\n    \n    const fetchTitans = await request(app).get(`/movie/${createTitans.body._id}/json`)\n\n    t.is(fetchTitans.status, 404)\n})\n\ntest('Add a person to the movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const personJohn = {\n        name: 'Johni',\n        age: 33,\n        shopped : []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n    const createJohn = await request(app).post('/person').send(personJohn)\n    const addPerson = await request(app).post(`/movie/${createTitans.body._id}/addPerson`).send({personId : createJohn.body._id})\n    t.is(addPerson.status, 200)\n    t.is(addPerson.body.attendees[0]._id, createJohn.body._id)\n    t.deepEqual(addPerson.body.attendees[0], createJohn.body)\n})\n\n//PERSON SERVICES\n\ntest('See list of persons', async t =>{\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const people = await request(app).get('/people')\n\n    t.is(people.status, 200)\n    t.true(Array.isArray(people.body))\n    t.true(people.body.length > 0)\n})\n\ntest('Create a person', async t => {\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    t.is(creation.status, 200)\n    t.is(newPerson.name, creation.body.name)\n    t.is(newPerson.age, creation.body.age)\n    t.deepEqual(newPerson.shopped, creation.body.shopped)\n})\n\ntest('Fetch a person', async t => {\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const fetchPerson = await request(app)\n    .get(`/person/${creation.body._id}`)\n\n    t.is(fetchPerson.status, 200)\n    t.deepEqual(creation.body, fetchPerson.body)\n})\n\ntest('Delete a person', async t => {\n    const newPerson = {\n        name:'Cola', \n        age:33, \n        shopped:[]\n    }\n\n    const creation = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const deletePerson = await request(app).delete(`/person/${creation.body._id}`)\n\n    t.is(deletePerson.status, 200)\n\n    const fetchPerson = await request(app).get(`/person/${creation.body._id}/json`)\n\n    t.is(fetchPerson.status, 404)\n})\n\ntest('Add item to the person', async t => {\n    const newPerson = {\n        name:'Kostas', \n        age:33, \n        shopped:[]\n    }\n\n    const newItem = {\n        name: 'Chocolate',\n        price: 3\n    }\n\n    const createPerson = await request(app)\n    .post('/person')\n    .send(newPerson)\n\n    const createItem = await request(app)\n    .post('/item')\n    .send(newItem)\n\n    const addItem = await request(app)\n    .post(`/person/${createPerson.body._id}/add-item`)\n    .send({itemId : createItem.body._id})\n\n    t.is(addItem.status, 200 )\n    t.is(addItem.body.shopped[0]._id, createItem.body._id)\n    t.deepEqual(addItem.body.shopped[0], createItem.body)\n\n})\n\n\n//Theater Services\ntest('See list of theaters', async t =>{\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const theatersList = await request(app).get('/theaters')\n\n    t.is(theatersList.status, 200)\n    t.true(Array.isArray(theatersList.body))\n    t.true(theatersList.body.length > 0)\n})\n\ntest('Create a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    t.is(creation.status, 200)\n    t.is(newTheater.name, creation.body.name)\n    t.is(newTheater.age, creation.body.age)\n    t.deepEqual(newTheater.movies, creation.body.movies)\n})\n\ntest('Fetch a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const fetchTheater = await request(app)\n    .get(`/theater/${creation.body._id}`)\n\n\n    t.is(fetchTheater.status, 200)\n    t.deepEqual(creation.body, fetchTheater.body)\n})\n\ntest('Delete a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n\n    const creation = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const deleteTheater = await request(app)\n    .delete(`/theater/${creation.body._id}`)\n\n    const fetchTheater = await request(app)\n    .get(`/theater/${creation.body._id}/json`)\n    \n    t.is(deleteTheater.status, 200)\n    t.is(fetchTheater.status, 404)\n\n})\n\ntest('Add a movie to a theater', async t => {\n    const newTheater = {\n        name: 'Max', \n        totalSales: 130,\n        movies: []\n    }\n    \n    const newTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createMovie = await request(app)\n    .post('/movie')\n    .send(newTitans)\n\n    const createTheater = await request(app)\n    .post('/theater')\n    .send(newTheater)\n\n    const addMovie = await request(app)\n    .post(`/theater/${createTheater.body._id}/add-movie`)\n    \n    t.is(addMovie.status, 200)\n\n})"]}
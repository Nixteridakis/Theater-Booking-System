'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _supertest = require('supertest');

var _supertest2 = _interopRequireDefault(_supertest);

var _app = require('../app');

var _app2 = _interopRequireDefault(_app);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('See list of shop items', async t => {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    const createChocolate = { name: 'Chocolate', price: 8 };

    const creation = await (0, _supertest2.default)(_app2.default).post('/item').send(createChocolate);

    const res = await (0, _supertest2.default)(_app2.default).get('/shop');

    t.is(res.status, 200);
    t.true(_rec._expr(_rec._capt(_rec._capt(Array, 'arguments/0/callee/object').isArray(_rec._capt(_rec._capt(res, 'arguments/0/arguments/0/object').body, 'arguments/0/arguments/0')), 'arguments/0'), {
        content: 't.true(Array.isArray(res.body), \'Body is array\')',
        filepath: 'test/shop-services.js',
        line: 15,
        async: true,
        ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"Array","range":[7,12]},"property":{"type":"Identifier","name":"isArray","range":[13,20]},"computed":false,"range":[7,20]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"res","range":[21,24]},"property":{"type":"Identifier","name":"body","range":[25,29]},"computed":false,"range":[21,29]}],"range":[7,30]},{"type":"StringLiteral","value":"Body is array","range":[32,47]}],"range":[0,48]}',
        tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"Array","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"isArray","range":[13,20]},{"type":{"label":"("},"range":[20,21]},{"type":{"label":"name"},"value":"res","range":[21,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"body","range":[25,29]},{"type":{"label":")"},"range":[29,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"Body is array","range":[32,47]},{"type":{"label":")"},"range":[47,48]}]',
        visitorKeys: _powerAssertVisitorKeys
    }), 'Body is array');
    t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(res, 'arguments/0/left/object/object').body, 'arguments/0/left/object').length, 'arguments/0/left') > 0, 'arguments/0'), {
        content: 't.true(res.body.length > 0)',
        filepath: 'test/shop-services.js',
        line: 16,
        async: true,
        ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":">","left":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"res","range":[7,10]},"property":{"type":"Identifier","name":"body","range":[11,15]},"computed":false,"range":[7,15]},"property":{"type":"Identifier","name":"length","range":[16,22]},"computed":false,"range":[7,22]},"right":{"type":"NumericLiteral","value":0,"range":[25,26]},"range":[7,26]}],"range":[0,27]}',
        tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"res","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"body","range":[11,15]},{"type":{"label":"."},"range":[15,16]},{"type":{"label":"name"},"value":"length","range":[16,22]},{"type":{"label":"</>"},"value":">","range":[23,24]},{"type":{"label":"num"},"value":0,"range":[25,26]},{"type":{"label":")"},"range":[26,27]}]',
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)('Create new Item', async t => {
    const createChocolate = { name: 'Chocolate', price: 8 };

    const res = await (0, _supertest2.default)(_app2.default).post('/item').send(createChocolate);

    t.is(res.status, 200);
    t.is(res.body.name, createChocolate.name);
    t.is(res.body.price, createChocolate.price);
});

(0, _ava2.default)('Fetch a shop Item', async t => {
    const createChocolate = { name: 'Chocolate', price: 8 };

    const res = await (0, _supertest2.default)(_app2.default).post('/item').send(createChocolate);

    const fetchRes = await (0, _supertest2.default)(_app2.default).get(`/item/${res.body._id}`);

    const chocolateFetched = fetchRes.body;

    t.is(fetchRes.status, 200);
    t.deepEqual(res.body, chocolateFetched);
});

(0, _ava2.default)('Delete an Item', async t => {
    const createChocolate = { name: 'Chocolate', price: 8 };

    const createdChocolate = await (0, _supertest2.default)(_app2.default).post('/item').send(createChocolate);

    const deleteChocolate = await (0, _supertest2.default)(_app2.default).delete(`/item/${createdChocolate.body._id}`);

    t.is(deleteChocolate.status, 200);

    const fetch = await (0, _supertest2.default)(_app2.default).get(`/item/${createdChocolate.body._id}/json`);

    t.is(fetch.status, 404);
});

//MOVIE SERVICES

(0, _ava2.default)('See list of movies', async t => {
    var _rec3 = new _powerAssertRecorder(),
        _rec4 = new _powerAssertRecorder();

    const createMovie = {
        name: 'Titans',
        price: 8,
        attendees: []
    };

    const creation = await (0, _supertest2.default)(_app2.default).post('/movie').send(createMovie);

    const list = await (0, _supertest2.default)(_app2.default).get('/movies');

    t.is(list.status, 200);
    t.true(_rec3._expr(_rec3._capt(_rec3._capt(Array, 'arguments/0/callee/object').isArray(_rec3._capt(_rec3._capt(list, 'arguments/0/arguments/0/object').body, 'arguments/0/arguments/0')), 'arguments/0'), {
        content: 't.true(Array.isArray(list.body))',
        filepath: 'test/shop-services.js',
        line: 84,
        async: true,
        ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"Array","range":[7,12]},"property":{"type":"Identifier","name":"isArray","range":[13,20]},"computed":false,"range":[7,20]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"list","range":[21,25]},"property":{"type":"Identifier","name":"body","range":[26,30]},"computed":false,"range":[21,30]}],"range":[7,31]}],"range":[0,32]}',
        tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"Array","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"isArray","range":[13,20]},{"type":{"label":"("},"range":[20,21]},{"type":{"label":"name"},"value":"list","range":[21,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"body","range":[26,30]},{"type":{"label":")"},"range":[30,31]},{"type":{"label":")"},"range":[31,32]}]',
        visitorKeys: _powerAssertVisitorKeys
    }));
    t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(list, 'arguments/0/left/object/object').body, 'arguments/0/left/object').length, 'arguments/0/left') > 0, 'arguments/0'), {
        content: 't.true(list.body.length > 0)',
        filepath: 'test/shop-services.js',
        line: 85,
        async: true,
        ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":">","left":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"list","range":[7,11]},"property":{"type":"Identifier","name":"body","range":[12,16]},"computed":false,"range":[7,16]},"property":{"type":"Identifier","name":"length","range":[17,23]},"computed":false,"range":[7,23]},"right":{"type":"NumericLiteral","value":0,"range":[26,27]},"range":[7,27]}],"range":[0,28]}',
        tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"list","range":[7,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"body","range":[12,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"length","range":[17,23]},{"type":{"label":"</>"},"value":">","range":[24,25]},{"type":{"label":"num"},"value":0,"range":[26,27]},{"type":{"label":")"},"range":[27,28]}]',
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)('Add a movie', async t => {
    const movieTitans = {
        name: 'Titans',
        price: 8,
        attendees: []
    };

    const createTitans = await (0, _supertest2.default)(_app2.default).post('/movie').send(movieTitans);

    t.is(createTitans.status, 200);
    t.is(createTitans.body.name, movieTitans.name);
    t.is(createTitans.body.price, movieTitans.price);
    t.deepEqual(createTitans.body.attendees, movieTitans.attendees);
});

(0, _ava2.default)('Fetch a movie', async t => {
    const movieTitans = {
        name: 'Titans',
        price: 8,
        attendees: []
    };

    const createTitans = await (0, _supertest2.default)(_app2.default).post('/movie').send(movieTitans);
    const fetchTitans = await (0, _supertest2.default)(_app2.default).get(`/movie/${createTitans.body._id}`);

    t.is(fetchTitans.status, 200);
    t.is(fetchTitans.body.name, movieTitans.name);
    t.is(fetchTitans.body.price, movieTitans.price);
});

(0, _ava2.default)('Delete a movie', async t => {
    const movieTitans = {
        name: 'Titans',
        price: 8,
        attendees: []
    };

    const createTitans = await (0, _supertest2.default)(_app2.default).post('/movie').send(movieTitans);
    const deleteTitans = await (0, _supertest2.default)(_app2.default).delete(`/movie/${createTitans.body._id}`);

    t.is(deleteTitans.status, 200);

    const fetchTitans = await (0, _supertest2.default)(_app2.default).get(`/movie/${createTitans.body._id}/json`);

    t.is(fetchTitans.status, 404);
});

(0, _ava2.default)('Add a person to the movie', async t => {
    const movieTitans = {
        name: 'Titans',
        price: 8,
        attendees: []
    };

    const personJohn = {
        name: 'John',
        age: 33,
        shopped: []
    };

    const createTitans = await (0, _supertest2.default)(_app2.default).post('/movie').send(movieTitans);
    const createJohn = await (0, _supertest2.default)(_app2.default).post('/person').send(personJohn);
    const addPerson = await (0, _supertest2.default)(_app2.default).post(`/movie/${createTitans.body._id}/addPerson`).send(`${createJohn.body._id}`);

    t.is(createTitans.status, 200);
    t.is(createJohn.status, 200);
    t.is(addPerson.status, 200);
});
//# sourceMappingURL=/Users/marinoschrysanthou/Desktop/Web Design/WTB/Course 6/homework/node_modules/.cache/ava/535fb23032d98ef8dccf2e73072c9d41.js.map
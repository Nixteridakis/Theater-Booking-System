{"version":3,"sources":["movie-services.js"],"names":["t","createMovie","name","price","attendees","creation","app","post","send","list","get","is","status","true","isArray","body","length","movieTitans","createTitans","deepEqual","fetchTitans","_id","deleteTitans","delete","personJohn","age","shopped","createJohn","addPerson","personId"],"mappings":"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","file":"movie-services.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../app'\n\n//MOVIE SERVICES\n\ntest('See list of movies', async t =>{\n    const createMovie = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const creation = await request(app)\n    .post('/movie')\n    .send(createMovie)\n\n    const list = await request(app).get('/movies')\n\n    t.is(list.status, 200)\n    t.true(Array.isArray(list.body))\n    t.true(list.body.length > 0)\n})\n\ntest('Add a movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n\n    t.is(createTitans.status, 200)\n    t.is(createTitans.body.name, movieTitans.name)    \n    t.is(createTitans.body.price, movieTitans.price)\n    t.deepEqual(createTitans.body.attendees, movieTitans.attendees)    \n})\n\ntest('Fetch a movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n    const fetchTitans = await request(app).get(`/movie/${createTitans.body._id}`)\n\n    t.is(fetchTitans.status, 200)\n    t.is(fetchTitans.body.name, movieTitans.name)\n    t.is(fetchTitans.body.price, movieTitans.price)\n})\n\ntest('Delete a movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n    const deleteTitans = await request(app).delete(`/movie/${createTitans.body._id}`)\n\n    t.is(deleteTitans.status, 200)\n    \n    const fetchTitans = await request(app).get(`/movie/${createTitans.body._id}/json`)\n\n    t.is(fetchTitans.status, 404)\n})\n\ntest('Add a person to the movie', async t => {\n    const movieTitans = {\n        name: 'Titans', \n        price: 8,\n        attendees: []\n    }\n\n    const personJohn = {\n        name: 'Johni',\n        age: 33,\n        shopped : []\n    }\n\n    const createTitans = await request(app).post('/movie').send(movieTitans)\n    const createJohn = await request(app).post('/person').send(personJohn)\n    const addPerson = await request(app).post(`/movie/${createTitans.body._id}/addPerson`).send({personId : createJohn.body._id})\n    t.is(addPerson.status, 200)\n    t.is(addPerson.body.attendees[0]._id, createJohn.body._id)\n    t.deepEqual(addPerson.body.attendees[0], createJohn.body)\n})"]}